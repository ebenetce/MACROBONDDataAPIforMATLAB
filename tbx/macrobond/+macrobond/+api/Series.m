classdef Series < macrobond.BaseClient
    % Series No description provided
    %
    % Series Properties:
    %
    %   serverUri           - Base URI to use when calling the API. Allows using a different server
    %                         than specified in the original API spec.
    %   httpOptions         - HTTPOptions used by all requests.
    %   preferredAuthMethod - If operation supports multiple authentication methods, specified which
    %                         method to prefer.
    %   bearerToken         - If Bearer token authentication is used, the token can be supplied 
    %                         here. Note the token is only used if operations are called for which
    %                         the API explicitly specified that Bearer authentication is supported.
    %                         If this has not been specified in the spec but most operations do 
    %                         require Bearer authentication, consider adding the relevant header to
    %                         all requests in the preSend method.
    %   apiKey              - If API key authentication is used, the key can be supplied here. 
    %                         Note the key is only used if operations are called for which
    %                         the API explicitly specified that API key authentication is supported.
    %                         If this has not been specified in the spec but most operations do 
    %                         require API key authentication, consider adding the API key to all
    %                         requests in the preSend method.
    %   httpCredentials     - If Basic or Digest authentication is supported username/password
    %                         credentials can be supplied here as matlab.net.http.Credentials. Note 
    %                         these are only actively used if operations are called for which the 
    %                         API spec has specified they require Basic authentication. If this has
    %                         not been specified in the spec but most operations do require
    %                         Basic authentication, consider setting the Credentials property in the
    %                         httpOptions rather than through httpCredentials.
    %   cookies             - Cookie jar. The cookie jar is shared across all Api classes in the 
    %                         same package. All responses are automatically parsed for Set-Cookie
    %                         headers and cookies are automatically added to the jar. Similarly
    %                         cookies are added to outgoing requests if there are matching cookies 
    %                         in the jar for the given request. Cookies can also be added manually
    %                         by calling the setCookies method on the cookies property. The cookie
    %                         jar is also saved to disk (cookies.mat in the same directory as 
    %                         BaseClient) and reloaded in new MATLAB sessions.
    %
    % Series Methods:
    %
    %   Series - Constructor
    %   seriesEntityinfofordisplayGet - Get formatted information about a time series
    %   seriesFetchallvintageseriesGet - Fetch all vintage series
    %   seriesFetchallvintageseriesPost - Fetch all vintage series
    %   seriesFetchentitiesGet - Fetch one or more entities
    %   seriesFetchentitiesPost - Fetch one or more entities
    %   seriesFetchnthreleaseseriesGet - Fetch one or more nth release series
    %   seriesFetchobservationhistoryGet - Fetch history of one or more observations in a time series
    %   seriesFetchseriesGet - Fetch one or more series
    %   seriesFetchseriesPost - Fetch one or more series
    %   seriesFetchunifiedseriesPost - Fetch one or more series and convert them to a common frequency and calendar
    %   seriesFetchvintageseriesGet - Fetch one or more vintage series
    %   seriesGetdatapackagelistGet - Get a list of entities for accounts that subscribe to data packages only
    %   seriesGetrevisioninfoGet - Get information about if a record of updates is stored for one or more series
    %
    % See Also: matlab.net.http.HTTPOptions, matlab.net.http.Credentials, 
    %   CookieJar.setCookies, macrobond.BaseClient

    % This file is automatically generated using OpenAPI
    % Specification version: v1
    % MATLAB Generator for OpenAPI version: 1.0.0
    

    % Instruct MATLAB Code Analyzer to ignore unnecessary brackets
    %#ok<*NBRAK2> 

    % Class properties
    properties
    end

    % Class methods
    methods
        function obj = Series(options)
            % Series Constructor, creates a Series instance.
            % When called without inputs, tries to load configuration
            % options from JSON file 'macrobond.Client.Settings.json'.
            % If this file is not present, the instance is initialized with 
            % default configuration option. An alternative configuration 
            % file can be provided through the "configFile" Name-Value pair.
            % All other properties of the instance can also be overridden 
            % using Name-Value pairs where Name equals the property name.
            % 
            % Examples:
            %
            %   % Create a client with default options and serverUri
            %   % as parsed from OpenAPI spec (if available)
            %   client = macrobond.api.Series();
            %
            %   % Create a client for alternative server/base URI
            %   client = macrobond.api.Series("serverUri","https://example.com:1234/api/");
            %
            %   % Create a client loading configuration options from 
            %   % JSON configuration file
            %   client = macrobond.api.Series("configFile","myconfig.json");
            %
            %   % Create a client with alternative HTTPOptions and an API key
            %   client = macrobond.api.Series("httpOptions",...
            %       matlab.net.http.HTTPOptions("ConnectTimeout",42),...
            %       "apiKey", "ABC123");

            arguments
                options.configFile string
                options.?macrobond.BaseClient
            end
            % Call base constructor to override any configured settings
            args = namedargs2cell(options);
            obj@macrobond.BaseClient(args{:})
        end

        function [code, result, response] = seriesEntityinfofordisplayGet(obj, n)
            % seriesEntityinfofordisplayGet Get formatted information about a time series
            % Get formatted information about a time series intended to be displayed to the user OAuth scope: macrobond_web_api.read_structure
            %
            % Required parameters:
            %   n - The name of one or more entities to fetch, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   200: The operation was successful
            %   400: The operation failed
            %   404: The series could not be found
            %   401: Unauthorized. Missing, invalid or expired access token.
            %   403: Forbidden. Not authorized.
            %   429: Too many requests. The maximum number of requests per day has been reached.
            %
            % Returns: EntityInfoForDisplayResponse
            %
            % See Also: macrobond.models.EntityInfoForDisplayResponse

            arguments
              obj macrobond.api.Series
              n string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("macrobond:api:seriesEntityinfofordisplayGet:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","seriesEntityinfofordisplayGet")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://api.macrobondfinancial.com");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/series/entityinfofordisplay";

            % No path parameters

            % Set query parameters
            uri.Query(end+1) = matlab.net.QueryParameter("n", n);
            
            % No JSON body parameters

            % No form body parameters

            % Configure Authentication
            authNames = [...
                "ClientDirectAccess", ...
                "auth", ...
            ];  
            [request, httpOptions, uri] = obj.requestAuth(authNames, request, httpOptions, uri);

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("seriesEntityinfofordisplayGet", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("seriesEntityinfofordisplayGet", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = macrobond.models.EntityInfoForDisplayResponse().fromJSON(response.Body.Data);
                case 400
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 429
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("macrobond:api:seriesEntityinfofordisplayGet:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","seriesEntityinfofordisplayGet",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % seriesEntityinfofordisplayGet method

        function [code, result, response] = seriesFetchallvintageseriesGet(obj, n, optionals)
            % seriesFetchallvintageseriesGet Fetch all vintage series
            % Fetch all vintage series and the complete history of changes. Metadata from the prevision response can be specified to get conditional and incremental changes. OAuth scope: macrobond_web_api.read_mb
            %
            % Required parameters:
            %   n - The name of the series, Type: string
            %
            % Optional name-value parameters:
            %   ifModifiedSince - If specified, the series will only be returned if modified since the specified time. If not, HTTP status 304 (Not Modified) will be returned. The value should be from the metadata LastModifiedTimeStamp of the previous response., Type: datetime, Format: date-time
            %   lastRevision - If specified, incremental updates can be return. HTTP status 206 (Partial Content) will be returned in that case. The value should be from the metadata LastRevisionTimeStamp of the previous response., Type: datetime, Format: date-time
            %   lastRevisionAdjustment - If specified, incremental updates can be return. HTTP status 206 (Partial Content) will be returned in that case. The value should be from the metadata LastRevisionAdjustmentTimeStamp of the previous response., Type: datetime, Format: date-time
            %
            % Responses:
            %   200: The operation was successful
            %   206: The operation was successful, but only new revisions are included
            %   304: The series was not modified since the timestamp passed as parmeter ifModifiedSince.
            %   400: The operation failed
            %   404: The series could not be found
            %   401: Unauthorized. Missing, invalid or expired access token.
            %   403: Forbidden. Not authorized.
            %   429: Too many requests. The maximum number of requests per day has been reached.
            %
            % Returns: Array of VintageSeriesResponse
            %
            % See Also: macrobond.models.VintageSeriesResponse

            arguments
              obj macrobond.api.Series
              n string
              optionals.ifModifiedSince datetime
              optionals.lastRevision datetime
              optionals.lastRevisionAdjustment datetime
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("macrobond:api:seriesFetchallvintageseriesGet:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","seriesFetchallvintageseriesGet")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://api.macrobondfinancial.com");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/series/fetchallvintageseries";

            % No path parameters

            % Set query parameters
            uri.Query(end+1) = matlab.net.QueryParameter("n", n);
            if isfield(optionals, "ifModifiedSince"), uri.Query(end+1) = matlab.net.QueryParameter("ifModifiedSince", optionals.ifModifiedSince); end
            if isfield(optionals, "lastRevision"), uri.Query(end+1) = matlab.net.QueryParameter("lastRevision", optionals.lastRevision); end
            if isfield(optionals, "lastRevisionAdjustment"), uri.Query(end+1) = matlab.net.QueryParameter("lastRevisionAdjustment", optionals.lastRevisionAdjustment); end
            
            % No JSON body parameters

            % No form body parameters

            % Configure Authentication
            authNames = [...
                "ClientDirectAccess", ...
                "auth", ...
            ];  
            [request, httpOptions, uri] = obj.requestAuth(authNames, request, httpOptions, uri);

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("seriesFetchallvintageseriesGet", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("seriesFetchallvintageseriesGet", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = macrobond.models.VintageSeriesResponse().fromJSON(response.Body.Data);
                case 206
                    result = macrobond.models.VintageSeriesResponse().fromJSON(response.Body.Data);
                case 304
                    result = response.Body.Data;
                case 400
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 429
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("macrobond:api:seriesFetchallvintageseriesGet:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","seriesFetchallvintageseriesGet",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % seriesFetchallvintageseriesGet method

        function [code, result, response] = seriesFetchallvintageseriesPost(obj, RevisionHistoryRequest)
            % seriesFetchallvintageseriesPost Fetch all vintage series
            % Fetch all vintage series and the complete history of changes. Metadata from the prevision response can be specified to get conditional and incremental changes. OAuth scope: macrobond_web_api.read_mb
            %
            % Required parameters:
            %   RevisionHistoryRequest - The name and timestamps of one or more series to request, Type: array
            %       Required properties in the model for this call:
            %       Optional properties in the model for this call:
            %
            % No optional parameters
            %
            % Responses:
            %   200: The operation was successful
            %   400: The operation failed
            %   401: Unauthorized. Missing, invalid or expired access token.
            %   403: Forbidden. Not authorized.
            %   429: Too many requests. The maximum number of requests per day has been reached.
            %
            % Returns: Array of SeriesWithVintagesResponse
            %
            % See Also: macrobond.models.SeriesWithVintagesResponse

            arguments
              obj macrobond.api.Series
              RevisionHistoryRequest macrobond.models.RevisionHistoryRequest
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("macrobond:api:seriesFetchallvintageseriesPost:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","seriesFetchallvintageseriesPost")
            end
            
            % Verify that operation supports JSON or FORM as input
            specContentTypeHeaders = [...
                "application/json", ...
                "text/json", ...
                "application/*+json", ...
            ];
            if ismember("application/json",specContentTypeHeaders)
                request.Header(end+1) = matlab.net.http.field.ContentTypeField('application/json');
            elseif ismember("application/x-www-form-urlencoded",specContentTypeHeaders)
                request.Header(end+1) = matlab.net.http.field.ContentTypeField('application/x-www-form-urlencoded');
            else
                error("macrobond:api:seriesFetchallvintageseriesPost:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' and 'application/x-www-form-urlencoded' MediaTypes.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","seriesFetchallvintageseriesPost")
            end
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('POST');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://api.macrobondfinancial.com");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/series/fetchallvintageseries";

            % No path parameters

            % No query parameters
            
            % Set JSON Body
            requiredProperties = [...
            ];
            optionalProperties = [...
            ];
            request.Body(1).Payload = RevisionHistoryRequest.getArrayPayload(requiredProperties,optionalProperties);

            % No form body parameters

            % Configure Authentication
            authNames = [...
                "ClientDirectAccess", ...
                "auth", ...
            ];  
            [request, httpOptions, uri] = obj.requestAuth(authNames, request, httpOptions, uri);

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("seriesFetchallvintageseriesPost", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("seriesFetchallvintageseriesPost", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = macrobond.models.SeriesWithVintagesResponse().fromJSON(response.Body.Data);
                case 400
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 429
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("macrobond:api:seriesFetchallvintageseriesPost:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","seriesFetchallvintageseriesPost",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % seriesFetchallvintageseriesPost method

        function [code, result, response] = seriesFetchentitiesGet(obj, n)
            % seriesFetchentitiesGet Fetch one or more entities
            % Fetch one or more entities. The result will be in the same order as the request. OAuth scope: macrobond_web_api.read_mb
            %
            % Required parameters:
            %   n - The name of one or more entities to fetch, Type: array
            %
            % No optional parameters
            %
            % Responses:
            %   200: The operation was successful
            %   400: The operation failed
            %   401: Unauthorized. Missing, invalid or expired access token.
            %   403: Forbidden. Not authorized.
            %   429: Too many requests. The maximum number of requests per day has been reached.
            %
            % Returns: Array of EntityResponse
            %
            % See Also: macrobond.models.EntityResponse

            arguments
              obj macrobond.api.Series
              n string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("macrobond:api:seriesFetchentitiesGet:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","seriesFetchentitiesGet")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://api.macrobondfinancial.com");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/series/fetchentities";

            % No path parameters

            % Set query parameters
            uri.Query(end+1) = matlab.net.QueryParameter("n", n, matlab.net.ArrayFormat.repeating);
            
            % No JSON body parameters

            % No form body parameters

            % Configure Authentication
            authNames = [...
                "ClientDirectAccess", ...
                "auth", ...
            ];  
            [request, httpOptions, uri] = obj.requestAuth(authNames, request, httpOptions, uri);

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("seriesFetchentitiesGet", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("seriesFetchentitiesGet", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = macrobond.models.EntityResponse().fromJSON(response.Body.Data);
                case 400
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 429
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("macrobond:api:seriesFetchentitiesGet:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","seriesFetchentitiesGet",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % seriesFetchentitiesGet method

        function [code, result, response] = seriesFetchentitiesPost(obj, EntityRequest)
            % seriesFetchentitiesPost Fetch one or more entities
            % Fetch one or more entities. A timestamp can be specified for each entity to conditionally retrieve a result. This is typically the value of the metadata LastModifiedTimeStamp from a previous request. The result will be in the same order as the request. OAuth scope: macrobond_web_api.read_mb
            %
            % Required parameters:
            %   EntityRequest - The name and timestamp of one or more entities to request, Type: array
            %       Required properties in the model for this call:
            %       Optional properties in the model for this call:
            %
            % No optional parameters
            %
            % Responses:
            %   200: The operation was successful
            %   400: The operation failed
            %   401: Unauthorized. Missing, invalid or expired access token.
            %   403: Forbidden. Not authorized.
            %   429: Too many requests. The maximum number of requests per day has been reached.
            %
            % Returns: Array of EntityResponse
            %
            % See Also: macrobond.models.EntityResponse

            arguments
              obj macrobond.api.Series
              EntityRequest macrobond.models.EntityRequest
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("macrobond:api:seriesFetchentitiesPost:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","seriesFetchentitiesPost")
            end
            
            % Verify that operation supports JSON or FORM as input
            specContentTypeHeaders = [...
                "application/json", ...
                "text/json", ...
                "application/*+json", ...
            ];
            if ismember("application/json",specContentTypeHeaders)
                request.Header(end+1) = matlab.net.http.field.ContentTypeField('application/json');
            elseif ismember("application/x-www-form-urlencoded",specContentTypeHeaders)
                request.Header(end+1) = matlab.net.http.field.ContentTypeField('application/x-www-form-urlencoded');
            else
                error("macrobond:api:seriesFetchentitiesPost:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' and 'application/x-www-form-urlencoded' MediaTypes.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","seriesFetchentitiesPost")
            end
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('POST');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://api.macrobondfinancial.com");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/series/fetchentities";

            % No path parameters

            % No query parameters
            
            % Set JSON Body
            requiredProperties = [...
            ];
            optionalProperties = [...
            ];
            request.Body(1).Payload = EntityRequest.getArrayPayload(requiredProperties,optionalProperties);

            % No form body parameters

            % Configure Authentication
            authNames = [...
                "ClientDirectAccess", ...
                "auth", ...
            ];  
            [request, httpOptions, uri] = obj.requestAuth(authNames, request, httpOptions, uri);

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("seriesFetchentitiesPost", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("seriesFetchentitiesPost", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = macrobond.models.EntityResponse().fromJSON(response.Body.Data);
                case 400
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 429
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("macrobond:api:seriesFetchentitiesPost:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","seriesFetchentitiesPost",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % seriesFetchentitiesPost method

        function [code, result, response] = seriesFetchnthreleaseseriesGet(obj, nth, n, optionals)
            % seriesFetchnthreleaseseriesGet Fetch one or more nth release series
            % Fetch one or more series where each value is the nth change of the value. The result will be in the same order as the request. OAuth scope: macrobond_web_api.read_mb
            %
            % Required parameters:
            %   nth - The nth change of each value, Type: int32, Format: int32
            %   n - The name of one or more series to fetch, Type: array
            %
            % Optional name-value parameters:
            %   getTimesOfChange - If True, include information of the time each values was last changed, Type: logical
            %
            % Responses:
            %   200: The operation was successful
            %   401: Unauthorized. Missing, invalid or expired access token.
            %   403: Forbidden. Not authorized.
            %   429: Too many requests. The maximum number of requests per day has been reached.
            %
            % Returns: Array of SeriesWithTimesOfChangeResponse
            %
            % See Also: macrobond.models.SeriesWithTimesOfChangeResponse

            arguments
              obj macrobond.api.Series
              nth int32
              n string
              optionals.getTimesOfChange logical
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("macrobond:api:seriesFetchnthreleaseseriesGet:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","seriesFetchnthreleaseseriesGet")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://api.macrobondfinancial.com");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/series/fetchnthreleaseseries";

            % No path parameters

            % Set query parameters
            uri.Query(end+1) = matlab.net.QueryParameter("nth", nth);
            if isfield(optionals, "getTimesOfChange"), uri.Query(end+1) = matlab.net.QueryParameter("getTimesOfChange", optionals.getTimesOfChange); end
            uri.Query(end+1) = matlab.net.QueryParameter("n", n, matlab.net.ArrayFormat.repeating);
            
            % No JSON body parameters

            % No form body parameters

            % Configure Authentication
            authNames = [...
                "ClientDirectAccess", ...
                "auth", ...
            ];  
            [request, httpOptions, uri] = obj.requestAuth(authNames, request, httpOptions, uri);

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("seriesFetchnthreleaseseriesGet", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("seriesFetchnthreleaseseriesGet", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = macrobond.models.SeriesWithTimesOfChangeResponse().fromJSON(response.Body.Data);
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 429
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("macrobond:api:seriesFetchnthreleaseseriesGet:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","seriesFetchnthreleaseseriesGet",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % seriesFetchnthreleaseseriesGet method

        function [code, result, response] = seriesFetchobservationhistoryGet(obj, n, t)
            % seriesFetchobservationhistoryGet Fetch history of one or more observations in a time series
            % Fetch the history of one or more observations in a time series. The result will be in the same order as the request. OAuth scope: macrobond_web_api.read_mb
            %
            % Required parameters:
            %   n - The name of the series fetch, Type: string
            %   t - The date of the observation to retrieve, Type: array, Format: date-time
            %
            % No optional parameters
            %
            % Responses:
            %   200: The operation was successful
            %   400: The operation failed
            %   404: The series could not be found
            %   401: Unauthorized. Missing, invalid or expired access token.
            %   403: Forbidden. Not authorized.
            %   429: Too many requests. The maximum number of requests per day has been reached.
            %
            % Returns: Array of SeriesObservationHistoryResponse
            %
            % See Also: macrobond.models.SeriesObservationHistoryResponse

            arguments
              obj macrobond.api.Series
              n string
              t datetime
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("macrobond:api:seriesFetchobservationhistoryGet:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","seriesFetchobservationhistoryGet")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://api.macrobondfinancial.com");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/series/fetchobservationhistory";

            % No path parameters

            % Set query parameters
            uri.Query(end+1) = matlab.net.QueryParameter("n", n);
            uri.Query(end+1) = matlab.net.QueryParameter("t", t, matlab.net.ArrayFormat.repeating);
            
            % No JSON body parameters

            % No form body parameters

            % Configure Authentication
            authNames = [...
                "ClientDirectAccess", ...
                "auth", ...
            ];  
            [request, httpOptions, uri] = obj.requestAuth(authNames, request, httpOptions, uri);

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("seriesFetchobservationhistoryGet", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("seriesFetchobservationhistoryGet", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = macrobond.models.SeriesObservationHistoryResponse().fromJSON(response.Body.Data);
                case 400
                    result = response.Body.Data;
                case 404
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 429
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("macrobond:api:seriesFetchobservationhistoryGet:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","seriesFetchobservationhistoryGet",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % seriesFetchobservationhistoryGet method

        function [code, result, response] = seriesFetchseriesGet(obj, n)
            % seriesFetchseriesGet Fetch one or more series
            % Fetch one or more series. The result will be in the same order as the request. OAuth scope: macrobond_web_api.read_mb
            %
            % Required parameters:
            %   n - The name of one or more series to fetch, Type: array
            %
            % No optional parameters
            %
            % Responses:
            %   200: The operation was successful
            %   400: The operation failed
            %   401: Unauthorized. Missing, invalid or expired access token.
            %   403: Forbidden. Not authorized.
            %   429: Too many requests. The maximum number of requests per day has been reached.
            %
            % Returns: Array of SeriesResponse
            %
            % See Also: macrobond.models.SeriesResponse

            arguments
              obj macrobond.api.Series
              n string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("macrobond:api:seriesFetchseriesGet:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","seriesFetchseriesGet")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://api.macrobondfinancial.com");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/series/fetchseries";

            % No path parameters

            % Set query parameters
            uri.Query(end+1) = matlab.net.QueryParameter("n", n, matlab.net.ArrayFormat.repeating);
            
            % No JSON body parameters

            % No form body parameters

            % Configure Authentication
            authNames = [...
                "ClientDirectAccess", ...
                "auth", ...
            ];  
            [request, httpOptions, uri] = obj.requestAuth(authNames, request, httpOptions, uri);

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("seriesFetchseriesGet", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("seriesFetchseriesGet", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = macrobond.models.SeriesResponse().fromJSON(response.Body.Data);
                case 400
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 429
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("macrobond:api:seriesFetchseriesGet:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","seriesFetchseriesGet",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % seriesFetchseriesGet method

        function [code, result, response] = seriesFetchseriesPost(obj, EntityRequest)
            % seriesFetchseriesPost Fetch one or more series
            % Fetch one or more series. A timestamp can be specified for each series to conditionally retrieve a result. This is typically the value of the metadata LastModifiedTimeStamp from a previous request. The result will be in the same order as the request. OAuth scope: macrobond_web_api.read_mb
            %
            % Required parameters:
            %   EntityRequest - The name and timestamp of one or more series to request, Type: array
            %       Required properties in the model for this call:
            %       Optional properties in the model for this call:
            %
            % No optional parameters
            %
            % Responses:
            %   200: The operation was successful
            %   400: The operation failed
            %   401: Unauthorized. Missing, invalid or expired access token.
            %   403: Forbidden. Not authorized.
            %   429: Too many requests. The maximum number of requests per day has been reached.
            %
            % Returns: Array of SeriesResponse
            %
            % See Also: macrobond.models.SeriesResponse

            arguments
              obj macrobond.api.Series
              EntityRequest macrobond.models.EntityRequest
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("macrobond:api:seriesFetchseriesPost:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","seriesFetchseriesPost")
            end
            
            % Verify that operation supports JSON or FORM as input
            specContentTypeHeaders = [...
                "application/json", ...
                "text/json", ...
                "application/*+json", ...
            ];
            if ismember("application/json",specContentTypeHeaders)
                request.Header(end+1) = matlab.net.http.field.ContentTypeField('application/json');
            elseif ismember("application/x-www-form-urlencoded",specContentTypeHeaders)
                request.Header(end+1) = matlab.net.http.field.ContentTypeField('application/x-www-form-urlencoded');
            else
                error("macrobond:api:seriesFetchseriesPost:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' and 'application/x-www-form-urlencoded' MediaTypes.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","seriesFetchseriesPost")
            end
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('POST');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://api.macrobondfinancial.com");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/series/fetchseries";

            % No path parameters

            % No query parameters
            
            % Set JSON Body
            requiredProperties = [...
            ];
            optionalProperties = [...
            ];
            request.Body(1).Payload = EntityRequest.getArrayPayload(requiredProperties,optionalProperties);

            % No form body parameters

            % Configure Authentication
            authNames = [...
                "ClientDirectAccess", ...
                "auth", ...
            ];  
            [request, httpOptions, uri] = obj.requestAuth(authNames, request, httpOptions, uri);

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("seriesFetchseriesPost", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("seriesFetchseriesPost", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = macrobond.models.SeriesResponse().fromJSON(response.Body.Data);
                case 400
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 429
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("macrobond:api:seriesFetchseriesPost:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","seriesFetchseriesPost",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % seriesFetchseriesPost method

        function [code, result, response] = seriesFetchunifiedseriesPost(obj, UnifiedSeriesRequest)
            % seriesFetchunifiedseriesPost Fetch one or more series and convert them to a common frequency and calendar
            % Fetch one or more series and convert them to a common frequency, calendar and optionally a common currency. Specify properties for frequency conversion and method to fill in missing values. The resulting list of series will be in the same order as in the request. OAuth scope: macrobond_web_api.read_mb
            %
            % Required parameters:
            %   UnifiedSeriesRequest - The name and timestamp of one or more series to request, Type: UnifiedSeriesRequest
            %       Required properties in the model for this call:
            %           seriesEntries
            %       Optional properties in the model for this call:
            %           frequency
            %           weekdays
            %           calendarMergeMode
            %           currency
            %           startDateMode
            %           startPoint
            %           endDateMode
            %           endPoint
            %
            % No optional parameters
            %
            % Responses:
            %   200: The operation was successful
            %   400: The operation failed
            %   401: Unauthorized. Missing, invalid or expired access token.
            %   403: Forbidden. Not authorized.
            %   429: Too many requests. The maximum number of requests per day has been reached.
            %
            % Returns: UnifiedSeriesResponse
            %
            % See Also: macrobond.models.UnifiedSeriesResponse

            arguments
              obj macrobond.api.Series
              UnifiedSeriesRequest macrobond.models.UnifiedSeriesRequest
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("macrobond:api:seriesFetchunifiedseriesPost:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","seriesFetchunifiedseriesPost")
            end
            
            % Verify that operation supports JSON or FORM as input
            specContentTypeHeaders = [...
                "application/json", ...
                "text/json", ...
                "application/*+json", ...
            ];
            if ismember("application/json",specContentTypeHeaders)
                request.Header(end+1) = matlab.net.http.field.ContentTypeField('application/json');
            elseif ismember("application/x-www-form-urlencoded",specContentTypeHeaders)
                request.Header(end+1) = matlab.net.http.field.ContentTypeField('application/x-www-form-urlencoded');
            else
                error("macrobond:api:seriesFetchunifiedseriesPost:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' and 'application/x-www-form-urlencoded' MediaTypes.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","seriesFetchunifiedseriesPost")
            end
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('POST');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://api.macrobondfinancial.com");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/series/fetchunifiedseries";

            % No path parameters

            % No query parameters
            
            % Set JSON Body
            requiredProperties = [...
                "seriesEntries",...
            ];
            optionalProperties = [...
                "frequency",...
                "weekdays",...
                "calendarMergeMode",...
                "currency",...
                "startDateMode",...
                "startPoint",...
                "endDateMode",...
                "endPoint",...
            ];
            request.Body(1).Payload = UnifiedSeriesRequest.getPayload(requiredProperties,optionalProperties);

            % No form body parameters

            % Configure Authentication
            authNames = [...
                "ClientDirectAccess", ...
                "auth", ...
            ];  
            [request, httpOptions, uri] = obj.requestAuth(authNames, request, httpOptions, uri);

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("seriesFetchunifiedseriesPost", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("seriesFetchunifiedseriesPost", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = macrobond.models.UnifiedSeriesResponse().fromJSON(response.Body.Data);
                case 400
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 429
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("macrobond:api:seriesFetchunifiedseriesPost:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","seriesFetchunifiedseriesPost",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % seriesFetchunifiedseriesPost method

        function [code, result, response] = seriesFetchvintageseriesGet(obj, t, n, optionals)
            % seriesFetchvintageseriesGet Fetch one or more vintage series
            % Fetch one or more vintage series. The result will be in the same order as the request. OAuth scope: macrobond_web_api.read_mb
            %
            % Required parameters:
            %   t - The time of the vintage to retrieve, Type: datetime, Format: date-time
            %   n - The name of one or more series to fetch, Type: array
            %
            % Optional name-value parameters:
            %   getTimesOfChange - If True, include information of the time each values was last changed, Type: logical
            %
            % Responses:
            %   200: The operation was successful
            %   401: Unauthorized. Missing, invalid or expired access token.
            %   403: Forbidden. Not authorized.
            %   429: Too many requests. The maximum number of requests per day has been reached.
            %
            % Returns: Array of VintageSeriesResponse
            %
            % See Also: macrobond.models.VintageSeriesResponse

            arguments
              obj macrobond.api.Series
              t datetime
              n string
              optionals.getTimesOfChange logical
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("macrobond:api:seriesFetchvintageseriesGet:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","seriesFetchvintageseriesGet")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://api.macrobondfinancial.com");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/series/fetchvintageseries";

            % No path parameters

            % Set query parameters
            uri.Query(end+1) = matlab.net.QueryParameter("t", t);
            if isfield(optionals, "getTimesOfChange"), uri.Query(end+1) = matlab.net.QueryParameter("getTimesOfChange", optionals.getTimesOfChange); end
            uri.Query(end+1) = matlab.net.QueryParameter("n", n, matlab.net.ArrayFormat.repeating);
            
            % No JSON body parameters

            % No form body parameters

            % Configure Authentication
            authNames = [...
                "ClientDirectAccess", ...
                "auth", ...
            ];  
            [request, httpOptions, uri] = obj.requestAuth(authNames, request, httpOptions, uri);

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("seriesFetchvintageseriesGet", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("seriesFetchvintageseriesGet", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = macrobond.models.VintageSeriesResponse().fromJSON(response.Body.Data);
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 429
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("macrobond:api:seriesFetchvintageseriesGet:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","seriesFetchvintageseriesGet",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % seriesFetchvintageseriesGet method

        function [code, result, response] = seriesGetdatapackagelistGet(obj, optionals)
            % seriesGetdatapackagelistGet Get a list of entities for accounts that subscribe to data packages only
            % Get a list of series in the data package list and timestamps when they were last changed. You can specify a timestamp to see what has changed since then. For this the timeStampForIfModifiedSince in the response from a previous call is typically used. This guarantees that you will not miss any updates, but you may see the same update more than once. OAuth scope: macrobond_web_api.read_mb
            %
            % No required parameters
            %
            % Optional name-value parameters:
            %   ifModifiedSince - If specified, only entities modified since the specified time are returned. This is typically the timeStampForIfModifiedSince from a previous call., Type: datetime, Format: date-time
            %
            % Responses:
            %   200: The operation was successful
            %   403: The account is not set up to use a subscription list
            %   401: Unauthorized. Missing, invalid or expired access token.
            %   429: Too many requests. The maximum number of requests per day has been reached.
            %
            % Returns: DataPackageListResponse
            %
            % See Also: macrobond.models.DataPackageListResponse

            arguments
              obj macrobond.api.Series
              optionals.ifModifiedSince datetime
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("macrobond:api:seriesGetdatapackagelistGet:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","seriesGetdatapackagelistGet")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://api.macrobondfinancial.com");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/series/getdatapackagelist";

            % No path parameters

            % Set query parameters
            if isfield(optionals, "ifModifiedSince"), uri.Query(end+1) = matlab.net.QueryParameter("ifModifiedSince", optionals.ifModifiedSince); end
            
            % No JSON body parameters

            % No form body parameters

            % Configure Authentication
            authNames = [...
                "ClientDirectAccess", ...
                "auth", ...
            ];  
            [request, httpOptions, uri] = obj.requestAuth(authNames, request, httpOptions, uri);

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("seriesGetdatapackagelistGet", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("seriesGetdatapackagelistGet", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = macrobond.models.DataPackageListResponse().fromJSON(response.Body.Data);
                case 403
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 429
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("macrobond:api:seriesGetdatapackagelistGet:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","seriesGetdatapackagelistGet",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % seriesGetdatapackagelistGet method

        function [code, result, response] = seriesGetrevisioninfoGet(obj, n)
            % seriesGetrevisioninfoGet Get information about if a record of updates is stored for one or more series
            % Get information about if a record of updates is stored for one or more series and the dates of changes. OAuth scope: macrobond_web_api.read_mb
            %
            % Required parameters:
            %   n - The name of one or more time series to fetch, Type: array
            %
            % No optional parameters
            %
            % Responses:
            %   200: The operation was successful
            %   401: Unauthorized. Missing, invalid or expired access token.
            %   403: Forbidden. Not authorized.
            %   429: Too many requests. The maximum number of requests per day has been reached.
            %
            % Returns: Array of SeriesWithRevisionsInfoResponse
            %
            % See Also: macrobond.models.SeriesWithRevisionsInfoResponse

            arguments
              obj macrobond.api.Series
              n string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("macrobond:api:seriesGetrevisioninfoGet:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","seriesGetrevisioninfoGet")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://api.macrobondfinancial.com");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/series/getrevisioninfo";

            % No path parameters

            % Set query parameters
            uri.Query(end+1) = matlab.net.QueryParameter("n", n, matlab.net.ArrayFormat.repeating);
            
            % No JSON body parameters

            % No form body parameters

            % Configure Authentication
            authNames = [...
                "ClientDirectAccess", ...
                "auth", ...
            ];  
            [request, httpOptions, uri] = obj.requestAuth(authNames, request, httpOptions, uri);

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("seriesGetrevisioninfoGet", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("seriesGetrevisioninfoGet", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = macrobond.models.SeriesWithRevisionsInfoResponse().fromJSON(response.Body.Data);
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 429
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("macrobond:api:seriesGetrevisioninfoGet:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","seriesGetrevisioninfoGet",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % seriesGetrevisioninfoGet method

    end %methods
end %class


