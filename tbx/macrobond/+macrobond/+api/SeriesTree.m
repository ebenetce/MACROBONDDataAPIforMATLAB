classdef SeriesTree < macrobond.BaseClient
    % SeriesTree No description provided
    %
    % SeriesTree Properties:
    %
    %   serverUri           - Base URI to use when calling the API. Allows using a different server
    %                         than specified in the original API spec.
    %   httpOptions         - HTTPOptions used by all requests.
    %   preferredAuthMethod - If operation supports multiple authentication methods, specified which
    %                         method to prefer.
    %   bearerToken         - If Bearer token authentication is used, the token can be supplied 
    %                         here. Note the token is only used if operations are called for which
    %                         the API explicitly specified that Bearer authentication is supported.
    %                         If this has not been specified in the spec but most operations do 
    %                         require Bearer authentication, consider adding the relevant header to
    %                         all requests in the preSend method.
    %   apiKey              - If API key authentication is used, the key can be supplied here. 
    %                         Note the key is only used if operations are called for which
    %                         the API explicitly specified that API key authentication is supported.
    %                         If this has not been specified in the spec but most operations do 
    %                         require API key authentication, consider adding the API key to all
    %                         requests in the preSend method.
    %   httpCredentials     - If Basic or Digest authentication is supported username/password
    %                         credentials can be supplied here as matlab.net.http.Credentials. Note 
    %                         these are only actively used if operations are called for which the 
    %                         API spec has specified they require Basic authentication. If this has
    %                         not been specified in the spec but most operations do require
    %                         Basic authentication, consider setting the Credentials property in the
    %                         httpOptions rather than through httpCredentials.
    %   cookies             - Cookie jar. The cookie jar is shared across all Api classes in the 
    %                         same package. All responses are automatically parsed for Set-Cookie
    %                         headers and cookies are automatically added to the jar. Similarly
    %                         cookies are added to outgoing requests if there are matching cookies 
    %                         in the jar for the given request. Cookies can also be added manually
    %                         by calling the setCookies method on the cookies property. The cookie
    %                         jar is also saved to disk (cookies.mat in the same directory as 
    %                         BaseClient) and reloaded in new MATLAB sessions.
    %
    % SeriesTree Methods:
    %
    %   SeriesTree - Constructor
    %   seriestreeFindlocationsGet - Find the locations of the series in the database tree
    %   seriestreeGetleafseriesGet - Get a structured list of series for a leaf in the database tree
    %   seriestreeGetnodesGet - Get the nodes of the series database tree
    %
    % See Also: matlab.net.http.HTTPOptions, matlab.net.http.Credentials, 
    %   CookieJar.setCookies, macrobond.BaseClient

    % This file is automatically generated using OpenAPI
    % Specification version: v1
    % MATLAB Generator for OpenAPI version: 1.0.0
    

    % Instruct MATLAB Code Analyzer to ignore unnecessary brackets
    %#ok<*NBRAK2> 

    % Class properties
    properties
    end

    % Class methods
    methods
        function obj = SeriesTree(options)
            % SeriesTree Constructor, creates a SeriesTree instance.
            % When called without inputs, tries to load configuration
            % options from JSON file 'macrobond.Client.Settings.json'.
            % If this file is not present, the instance is initialized with 
            % default configuration option. An alternative configuration 
            % file can be provided through the "configFile" Name-Value pair.
            % All other properties of the instance can also be overridden 
            % using Name-Value pairs where Name equals the property name.
            % 
            % Examples:
            %
            %   % Create a client with default options and serverUri
            %   % as parsed from OpenAPI spec (if available)
            %   client = macrobond.api.SeriesTree();
            %
            %   % Create a client for alternative server/base URI
            %   client = macrobond.api.SeriesTree("serverUri","https://example.com:1234/api/");
            %
            %   % Create a client loading configuration options from 
            %   % JSON configuration file
            %   client = macrobond.api.SeriesTree("configFile","myconfig.json");
            %
            %   % Create a client with alternative HTTPOptions and an API key
            %   client = macrobond.api.SeriesTree("httpOptions",...
            %       matlab.net.http.HTTPOptions("ConnectTimeout",42),...
            %       "apiKey", "ABC123");

            arguments
                options.configFile string
                options.?macrobond.BaseClient
            end
            % Call base constructor to override any configured settings
            args = namedargs2cell(options);
            obj@macrobond.BaseClient(args{:})
        end

        function [code, result, response] = seriestreeFindlocationsGet(obj, seriesName)
            % seriestreeFindlocationsGet Find the locations of the series in the database tree
            % Find the locations where this series can be found in the database tree. OAuth scope: macrobond_web_api.read_structure
            %
            % Required parameters:
            %   seriesName - The name of the series, Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   200: The operation was successful
            %   401: Unauthorized. Missing, invalid or expired access token.
            %   403: Forbidden. Not authorized.
            %   429: Too many requests. The maximum number of requests per day has been reached.
            %
            % Returns: Array of SeriesTreeLocationPart
            %
            % See Also: macrobond.models.SeriesTreeLocationPart

            arguments
              obj macrobond.api.SeriesTree
              seriesName string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("macrobond:api:seriestreeFindlocationsGet:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","seriestreeFindlocationsGet")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://api.macrobondfinancial.com");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/seriestree/findlocations";

            % No path parameters

            % Set query parameters
            uri.Query(end+1) = matlab.net.QueryParameter("seriesName", seriesName);
            
            % No JSON body parameters

            % No form body parameters

            % Configure Authentication
            authNames = [...
                "ClientDirectAccess", ...
                "auth", ...
            ];  
            [request, httpOptions, uri] = obj.requestAuth(authNames, request, httpOptions, uri);

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("seriestreeFindlocationsGet", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("seriestreeFindlocationsGet", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = macrobond.models.SeriesTreeLocationPart().fromJSON(response.Body.Data);
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 429
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("macrobond:api:seriestreeFindlocationsGet:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","seriestreeFindlocationsGet",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % seriestreeFindlocationsGet method

        function [code, result, response] = seriestreeGetleafseriesGet(obj, path, optionals)
            % seriestreeGetleafseriesGet Get a structured list of series for a leaf in the database tree
            % Get a structured list of series for a leaf in the database tree identified by the path of the tree branches. OAuth scope: macrobond_web_api.read_structure
            %
            % Required parameters:
            %   path - Path to the leaf of the tree composed of the node descriptions encoded using RFC 2396 separated by /, Type: string
            %
            % Optional name-value parameters:
            %   dp - Optional display properties. Can be names of metadata attributes or $CopPercent or $CopValue, Type: array
            %
            % Responses:
            %   200: The operation was successful
            %   404: The path was not found
            %   401: Unauthorized. Missing, invalid or expired access token.
            %   403: Forbidden. Not authorized.
            %   429: Too many requests. The maximum number of requests per day has been reached.
            %
            % Returns: SeriesTreeListingResponse
            %
            % See Also: macrobond.models.SeriesTreeListingResponse

            arguments
              obj macrobond.api.SeriesTree
              path string
              optionals.dp string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("macrobond:api:seriestreeGetleafseriesGet:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","seriestreeGetleafseriesGet")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://api.macrobondfinancial.com");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/seriestree/getleafseries";

            % No path parameters

            % Set query parameters
            uri.Query(end+1) = matlab.net.QueryParameter("path", path);
            if isfield(optionals, "dp"), uri.Query(end+1) = matlab.net.QueryParameter("dp", optionals.dp, matlab.net.ArrayFormat.repeating); end
            
            % No JSON body parameters

            % No form body parameters

            % Configure Authentication
            authNames = [...
                "ClientDirectAccess", ...
                "auth", ...
            ];  
            [request, httpOptions, uri] = obj.requestAuth(authNames, request, httpOptions, uri);

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("seriestreeGetleafseriesGet", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("seriestreeGetleafseriesGet", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = macrobond.models.SeriesTreeListingResponse().fromJSON(response.Body.Data);
                case 404
                    result = response.Body.Data;
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 429
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("macrobond:api:seriestreeGetleafseriesGet:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","seriestreeGetleafseriesGet",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % seriestreeGetleafseriesGet method

        function [code, result, response] = seriestreeGetnodesGet(obj, optionals)
            % seriestreeGetnodesGet Get the nodes of the series database tree
            % Get the nodes of a branch of the series database tree. OAuth scope: macrobond_web_api.read_structure
            %
            % No required parameters
            %
            % Optional name-value parameters:
            %   path - Path to branch of the tree or not specified for the root, Type: string
            %   filterPath - Path to a filter or omitted if not filtered, Type: string
            %
            % Responses:
            %   200: The operation was successful
            %   401: Unauthorized. Missing, invalid or expired access token.
            %   403: Forbidden. Not authorized.
            %   429: Too many requests. The maximum number of requests per day has been reached.
            %
            % Returns: Array of seriestree_getnodes_get_200_response_inner
            %
            % See Also: macrobond.models.seriestree_getnodes_get_200_response_inner

            arguments
              obj macrobond.api.SeriesTree
              optionals.path string
              optionals.filterPath string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("macrobond:api:seriestreeGetnodesGet:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","seriestreeGetnodesGet")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://api.macrobondfinancial.com");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/v1/seriestree/getnodes";

            % No path parameters

            % Set query parameters
            if isfield(optionals, "path"), uri.Query(end+1) = matlab.net.QueryParameter("path", optionals.path); end
            if isfield(optionals, "filterPath"), uri.Query(end+1) = matlab.net.QueryParameter("filterPath", optionals.filterPath); end
            
            % No JSON body parameters

            % No form body parameters

            % Configure Authentication
            authNames = [...
                "ClientDirectAccess", ...
                "auth", ...
            ];  
            [request, httpOptions, uri] = obj.requestAuth(authNames, request, httpOptions, uri);

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("seriestreeGetnodesGet", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("seriestreeGetnodesGet", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = macrobond.models.seriestree_getnodes_get_200_response_inner().fromJSON(response.Body.Data);
                case 401
                    result = response.Body.Data;
                case 403
                    result = response.Body.Data;
                case 429
                    result = response.Body.Data;
                otherwise % Unexpected output, not declared in spec
                    % Any response in the OK range will not throw a warning
                    if (int32(response.StatusCode) < 200 || int32(response.StatusCode) >= 300)
                        % Others will throw a warning
                        warning("macrobond:api:seriestreeGetnodesGet:UndocumentedResponse","Operation '%s' returned an undocumented response code '%d'.\n" + ...
                            "Response Body is returned as raw data.","seriestreeGetnodesGet",code);
                    end
                    % Return the raw body data
                    result = response.Body.Data;
            end
        
        end % seriestreeGetnodesGet method

    end %methods
end %class


