classdef AttributeFilter < macrobond.JSONMapper
% AttributeFilter No description provided
% 
% AttributeFilter Properties:
%   attributeName - The name of the attribute for this filter - type: string
%   description - The description of the attribute - type: string
%   values - The list of values for this attribute - type: array of AttributeFilterValue
%   count - The count of entities that has this attribute - type: int32

% This file is automatically generated using OpenAPI
% Specification version: v1
% MATLAB Generator for OpenAPI version: 1.0.0


    % Class properties
    properties
        % attributeName - The name of the attribute for this filter - type: string
        attributeName string { macrobond.JSONMapper.fieldName(attributeName,"attributeName")}
        % description - The description of the attribute - type: string
        description string { macrobond.JSONMapper.fieldName(description,"description")}
        % values - The list of values for this attribute - type: array of AttributeFilterValue
        values macrobond.models.AttributeFilterValue { macrobond.JSONMapper.fieldName(values,"values"), macrobond.JSONMapper.JSONArray}
        % count - The count of entities that has this attribute - type: int32
        count int32 { macrobond.JSONMapper.fieldName(count,"count")}
    end

    % Class methods
    methods
        % Constructor
        function obj = AttributeFilter(s,inputs)
            % To allow proper nesting of object, derived objects must
            % call the initialize method from their constructor. This 
            % also allows objects to be instantiated with Name-Value pairs
            % as inputs to set properties to specified values.
            arguments
                s { macrobond.JSONMapper.ConstructorArgument } = []
                inputs.?macrobond.models.AttributeFilter
            end
            obj = obj.initialize(s,inputs);
        end
    end %methods
end %class

